@inherits MvcBloggy.Web.Infrastructure.HelperPage
@using MvcBloggy.API.Model.Dtos;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using MvcBloggy.Resources;
@using System.Web.Routing;

@helper Pager(IPaginatedDto<IDto> paginatedDto) {
    
    var routeDictionary = RouteData.Values;
    if(Url.RequestContext.HttpContext.Request.QueryString.AllKeys.Any()) {
        foreach (var key in Url.RequestContext.HttpContext.Request.QueryString.AllKeys) {
            routeDictionary.Add(key, Url.RequestContext.HttpContext.Request.QueryString[key]);
        }
    }
    
    <ul class="pagination">
        @if(paginatedDto.HasPreviousPage) {
            
            var tempRouteDataDictionary = new RouteValueDictionary(routeDictionary);
            tempRouteDataDictionary.Remove("page");
            tempRouteDataDictionary.Add("page", (paginatedDto.PageIndex - 1).ToString());
            
            <li>
                @Html.RouteLink(
                    Strings.Previous,
                    tempRouteDataDictionary
                )
                @*@Html.ActionLink(
                    Strings.Previous,
                    RouteData.Values["action"].ToString(), 
                    new { 
                        controller = RouteData.Values["controller"], 
                        page = paginatedDto.PageIndex - 1
                    }
                )*@
            </li>
        }

        @if (paginatedDto.TotalPageCount >= 2) {
            int totalPageNumber = 0;
            for (int index = 1; index <= paginatedDto.TotalPageCount; index++) {
                
                var tempRouteDataDictionary = new RouteValueDictionary(routeDictionary);
                tempRouteDataDictionary.Remove("page");
                tempRouteDataDictionary.Add("page", index.ToString());
                
                string cssClass = (paginatedDto.PageIndex == index) ? "active" : null;
                <li class="@cssClass">
                    @Html.RouteLink(
                        index.ToString(),
                        tempRouteDataDictionary
                    )
                    @*@Html.ActionLink(
                        index.ToString(),
                        RouteData.Values["action"].ToString(), 
                        new { 
                            controller = RouteData.Values["controller"], 
                            page = index
                        }
                    )*@
                </li>
                totalPageNumber++;
            }
        }

        @if(paginatedDto.HasNextPage) {
            
            var tempRouteDataDictionary = new RouteValueDictionary(routeDictionary);
            tempRouteDataDictionary.Remove("page");
            tempRouteDataDictionary.Add("page", (paginatedDto.PageIndex + 1).ToString());
            
            <li>
                @Html.RouteLink(
                    Strings.Next,
                    tempRouteDataDictionary
                )
                @*@Html.ActionLink(
                    Strings.Next,
                    RouteData.Values["action"].ToString(), 
                    new { 
                        controller = RouteData.Values["controller"], 
                        page = paginatedDto.PageIndex + 1
                    }
                )*@
            </li>
        }
    </ul>
}